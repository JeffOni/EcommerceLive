<?php

require_once 'vendor/autoload.php';

use Illuminate\Foundation\Application;
use App\Models\User;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Gate;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Route;

// Inicializar la aplicaci√≥n Laravel
$app = require_once 'bootstrap/app.php';
$kernel = $app->make('Illuminate\Contracts\Console\Kernel');
$kernel->bootstrap();

echo "=== SIMULACI√ìN COMPLETA DEL FLUJO DE AUTENTICACI√ìN ===\n\n";

// Obtener un usuario admin
$adminUser = User::role(['admin', 'super_admin'])->first();

if (!$adminUser) {
    echo "ERROR: No se encontr√≥ ning√∫n usuario admin\n";
    exit;
}

echo "üë§ Usuario de prueba: {$adminUser->name} ({$adminUser->email})\n";
echo "üè∑Ô∏è  Roles: " . $adminUser->roles->pluck('name')->implode(', ') . "\n\n";

// Simular autenticaci√≥n
Auth::login($adminUser);

echo "=== PASO 1: VERIFICACI√ìN DE AUTENTICACI√ìN ===\n";
echo "‚úÖ Usuario autenticado: " . (Auth::check() ? 'S√ç' : 'NO') . "\n";
echo "üë§ Usuario actual: " . (Auth::user() ? Auth::user()->name : 'NINGUNO') . "\n\n";

echo "=== PASO 2: L√ìGICA DEL DASHBOARD ===\n";
$user = auth()->user();
if ($user && $user->hasAnyRole(['admin', 'super_admin'])) {
    echo "‚úÖ CONDICI√ìN CUMPLIDA: Usuario tiene rol administrativo\n";
    echo "üîÑ ACCI√ìN: Deber√≠a redirigir a '/admin'\n";
    $shouldRedirectTo = '/admin';
} else {
    echo "‚ùå CONDICI√ìN NO CUMPLIDA: Usuario NO tiene rol administrativo\n";
    echo "üîÑ ACCI√ìN: Deber√≠a redirigir a 'welcome.index'\n";
    $shouldRedirectTo = 'welcome.index';
}
echo "\n";

echo "=== PASO 3: VERIFICACI√ìN DE ACCESO A /admin ===\n";

// Verificar middleware auth
$isAuthenticated = Auth::check();
echo "üîê Middleware 'auth': " . ($isAuthenticated ? '‚úÖ PASA' : '‚ùå FALLA') . "\n";

// Verificar Gate admin-panel
$canAccessAdminPanel = Gate::allows('admin-panel');
echo "üõ°Ô∏è  Gate 'admin-panel': " . ($canAccessAdminPanel ? '‚úÖ PASA' : '‚ùå FALLA') . "\n";

// Verificar acceso combinado
$canAccessAdmin = $isAuthenticated && $canAccessAdminPanel;
echo "üéØ ACCESO FINAL A /admin: " . ($canAccessAdmin ? '‚úÖ PERMITIDO' : '‚ùå DENEGADO') . "\n\n";

echo "=== PASO 4: DIAGN√ìSTICO DETALLADO ===\n";

// Verificar cada rol individualmente
echo "üîç Verificaci√≥n detallada de roles:\n";
echo "   - hasRole('admin'): " . ($user->hasRole('admin') ? '‚úÖ' : '‚ùå') . "\n";
echo "   - hasRole('super_admin'): " . ($user->hasRole('super_admin') ? '‚úÖ' : '‚ùå') . "\n";
echo "   - hasAnyRole(['admin', 'super_admin']): " . ($user->hasAnyRole(['admin', 'super_admin']) ? '‚úÖ' : '‚ùå') . "\n";

// Verificar la ruta espec√≠fica existe
try {
    $adminRoute = Route::getRoutes()->getByName('admin.dashboard');
    echo "üõ£Ô∏è  Ruta 'admin.dashboard': " . ($adminRoute ? '‚úÖ EXISTE' : '‚ùå NO EXISTE') . "\n";
    if ($adminRoute) {
        echo "   URI: " . $adminRoute->uri() . "\n";
        echo "   Middlewares: " . implode(', ', $adminRoute->middleware()) . "\n";
    }
} catch (Exception $e) {
    echo "üõ£Ô∏è  Ruta 'admin.dashboard': ‚ùå ERROR - " . $e->getMessage() . "\n";
}

echo "\n=== CONCLUSI√ìN ===\n";
if ($canAccessAdmin) {
    echo "‚úÖ El usuario DEBER√çA poder acceder a /admin sin problemas\n";
} else {
    echo "‚ùå PROBLEMA DETECTADO: El usuario NO puede acceder a /admin\n";
    if (!$isAuthenticated) {
        echo "   - Problema: No est√° autenticado\n";
    }
    if (!$canAccessAdminPanel) {
        echo "   - Problema: Gate 'admin-panel' deniega el acceso\n";
    }
}

echo "\n=== FIN SIMULACI√ìN ===\n";
